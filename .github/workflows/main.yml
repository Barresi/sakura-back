name: Deploy to Yandex Cloud
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [feature/**-prod]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    services:
      docker:
        image: docker:20.10.11
        options: --privileged
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Delete repo
        run: rm -Rf ./* 
      - name: git clone
        run: git clone https://github.com/Barresi/sakura-back.git
      - name: git checkout
        run: git checkout feature/settings-prod
      - name: rm old .env file
        run: echo > .env
      - name: add new .env file
        run: cp .env.example .env
      - name: docker compose up
        run: docker compose up -d --build
      - name: See docker compose what is working now
        run: docker ps
      # - name: add chmod to db dir
      #   run: chmod -Rf 666 ./postgres/ ./redis/
  # need checkout before using compose-action
  # - uses: isbang/compose-action@v1.5.1
  #   with:
  #     compose-file: "./docker-compose.yml"
  #     up-flags: "-d --build"
  #     services: |
  #       sakura-back
  #       redis
  #       postgres
  #   env:
  #     NODE_ENV: "development"
  #     PROJECT_NAME: "sakura"
  #     NODE_CONFIG_DIR: "./src/config"
  #     EXPRESS_PORT: 5000
  #     HOST: "sakura-back"
  #     CORS_ORIGIN: "https://ssakura.ru"
  #     DB_URL: "postgresql://sakura:mypassword@postgres:5432/sakura"
  #     DB_LOGS: 0
  #     POSTGRES_DB: "sakura"
  #     POSTGRES_USER: "sakura"
  #     POSTGRES_PASSWORD: "mypassword"
  #     REDIS_URL: "redis://:localpass@redis:6379/0"
  #     REDIS_PASSWORD: "localpass"
  #     REDIS_PORT: 6379
  #     REDIS_DATABASES: 16
  #     ACCESS_TOKEN_SECRET: "access-token-secret"
  #     REFRESH_TOKEN_SECRET: "refresh-token-secret"
